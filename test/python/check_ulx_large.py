import unittest
import numpy
import irbasis as ir

class TestMethods(unittest.TestCase):
    def __init__(self, *args, **kwargs):
        
        super(TestMethods, self).__init__(*args, **kwargs)

    def test_large_lambda_f(self):
        maxValue_ref={
            ("ulx", 10000.0 ) :  (33.524271032735236),
            ("vly", 10000.0 ) :  (5.894704051440388)
        }
        ref_ulx_f_edge = numpy.array(
            [(0.000000000000000000e+00,9.164594945726812700e-03,1.832918989145362540e-02,2.749378483718043636e-02,
              3.665837978290725080e-02,4.582297472863406523e-02,5.498756967436087273e-02,6.415216462008768716e-02,
              7.331675956581450160e-02,8.248135451154131603e-02),
            (9.999750923211472298e-01,9.999778598410197228e-01,9.999806273608923268e-01,9.999833948807648198e-01,
             9.999861624006373129e-01,9.999889299205099169e-01,9.999916974403824099e-01,9.999944649602549029e-01,
             9.999972324801275070e-01,1.000000000000000000e+00)]
        )
        ref_ulx_f = numpy.array(
            [(-2.170565500509401830e-12,-7.938825584173429817e-02,-1.565748419611074360e-01,-2.294145999045761053e-01,
              -2.958741638591263490e-01,-3.540848013024551211e-01,-4.023916399151027390e-01,-4.393981644737129932e-01,
              -4.640049425266617455e-01,-4.754416308101342414e-01),
            (-1.135378581777467810e-01,2.342362080992882234e+00,5.075147718823669329e+00,8.102247449678666058e+00,
             1.144187695069955346e+01,1.511306750243413077e+01,1.913569516984394170e+01,2.353051086825572469e+01,
             2.831917133513316642e+01,3.352427103273523556e+01)]
        )

        ref_vly_f_edge = numpy.array(
            [(0.000000000000000000e+00,6.444436771733490041e-06,1.288887354346698008e-05,1.933331031520046928e-05,
              2.577774708693396016e-05,3.222218385866745105e-05,3.866662063040093855e-05,4.511105740213443283e-05,
              5.155549417386792033e-05,5.799993094560140783e-05),
            (9.803279640124591410e-01,9.825137457888525327e-01,9.846995275652460355e-01,9.868853093416394273e-01,
             9.890710911180328191e-01,9.912568728944263219e-01,9.934426546708197137e-01,9.956284364472131054e-01,
             9.978142182236066082e-01,1.000000000000000000e+00)]
        )
        ref_vly_f = numpy.array(
            [(2.783054720925345786e-11,5.653355306565811533e-01,1.125800753001620746e+00,1.676583073500023557e+00,
              2.212984234321843324e+00,2.730474780710551386e+00,3.224745378636486581e+00,3.691754081361409146e+00,
              4.127768761390112395e+00,4.529404061515307944e+00),
            (-5.737172276716720476e-02,-1.789096267468829882e-01,-3.122061714401808130e-01,-4.577939265008062475e-01,
             -6.162169576334813881e-01,-7.880308545981193902e-01,-9.738027565517216599e-01,-1.174111374742678349e+00,
             -1.389547012572992291e+00,-1.620711583044925908e+00)
            ]
        )

        for _lambda in [10000.0]:
            prefix =  "basis_f-mp-Lambda"+str(_lambda)+"_np10"
            rb = ir.basis("../irbasis.h5", prefix)
            Nl = rb.dim()
            if Nl % 2 == 1: Nl -=1
            for i in range(2):
                #ulx 
                xvec = ref_ulx_f_edge[i]
                ulxvec=numpy.array([rb.ulx(Nl-1,x) for x in xvec])
                print(abs(ulxvec-ref_ulx_f[i])/ maxValue_ref[("ulx", _lambda)])
                #vly            
                xvec = ref_vly_f_edge[i]
                vlyvec=numpy.array([rb.vly(Nl-1,x) for x in xvec])
                print(abs(vlyvec-ref_vly_f[i])/ maxValue_ref[("vly", _lambda)])

    def test_large_lambda_b(self):
        maxValue_ref={            
            ("ulx", 10000.0 ) :  (32.80554673413847),
            ("vly", 10000.0 ) :  (6.512489732070387)
        }

        ref_ulx_b_edge = numpy.array(
            [(0.000000000000000000e+00,1.263510371286300990e-02,2.527020742572601980e-02,3.790531113858902623e-02,
              5.054041485145203960e-02,6.317551856431505297e-02,7.581062227717805246e-02,8.844572599004106583e-02,
              1.010808297029040792e-01,1.137159334157670926e-01),
            (9.999765162649214556e-01,9.999791255688190716e-01,9.999817348727166877e-01,9.999843441766143037e-01,
             9.999869534805119198e-01,9.999895627844095358e-01,9.999921720883071519e-01,9.999947813922047679e-01,
             9.999973906961023840e-01,1.000000000000000000e+00)]
        )
        ref_ulx_b = numpy.array(
            [(7.597684388932395409e-12,-8.153309058034484413e-02,-1.607866745883833881e-01,-2.355348284781240142e-01,
              -3.036580254078029006e-01,-3.631944056301656398e-01,-4.123887216649597121e-01,-4.497381642750603037e-01,
              -4.740342612148544243e-01,-4.844000256177946051e-01),
            (-3.619336217083707341e-01,2.043582803026039674e+00,4.725073813222158137e+00,7.700133124036415921e+00,
             1.098715711652785565e+01,1.460537391772395210e+01,1.857487336798847721e+01,2.291663789938366236e+01,
             2.765257434929149838e+01,3.280554673413846700e+01)]
        )
        
        ref_vly_b_edge = numpy.array(
            [(0.000000000000000000e+00,1.013010624447943420e-05,2.026021248895886839e-05,3.039031873343830259e-05,
              4.052042497791773679e-05,5.065053122239717099e-05,6.078063746687660518e-05,7.091074371135604616e-05,
              8.104084995583547358e-05,9.117095620031490100e-05),
            (9.881960012904565938e-01,9.895075567026281327e-01,9.908191121147995606e-01,9.921306675269710995e-01,
             9.934422229391425274e-01,9.947537783513140663e-01,9.960653337634854942e-01,9.973768891756570332e-01,
             9.986884445878284611e-01,1.000000000000000000e+00)]
        )
        ref_vly_b = numpy.array(
            [(8.836980238263806693e-12,6.420321164613524978e-01,1.278697390452893545e+00,1.904683501273815249e+00,
              2.514786409628612773e+00,3.103962608699586845e+00,3.667379150163821766e+00,4.200460773467685982e+00,
              4.698933523809236235e+00,5.158864312588889334e+00),
            (-3.459142333767326050e-01,-4.608035159324274654e-01,-5.834880444487358098e-01,-7.142439922478578396e-01,
             -8.533530708084219318e-01,-1.001102580467729819e+00,-1.157785460976937131e+00,-1.323700341904960220e+00,
             -1.499151592886206474e+00,-1.684449373708225117e+00)]
        )
        #for _lambda in [10000]:
            #prefix =  "basis_b-mp-Lambda"+str(_lambda)+"_np10"
            #rb = ir.basis("../irbasis.h5", prefix)
            #Nl = rb.dim()
            #if Nl % 2 == 1: Nl -=1
            # region near 0
            #ulx
            #xvec = ref_ulx_b_edge[0]
            #datavec=numpy.array([rb.ulx(Nl-1,x) for x in xvec])
            #print(ref_ulx_f[0])
            #vly


if __name__ == '__main__':
    unittest.main()

# https://cmake.org/pipermail/cmake/2012-May/050120.html
